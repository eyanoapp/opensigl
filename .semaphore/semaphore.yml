version: v1.0
name: Integration Tests
agent:
  machine:
    type: e2-standard-2
    os_image: ubuntu2204
blocks:
  - name: Update Dependencies
    dependencies: []
    task:
      jobs:
        - name: Update Dependencies
          commands:
            - sudo apt-get update -qq
            - sudo apt-get install mysql-client redis-tools -y -qq
            - sudo apt autoremove -y -qq && sudo apt autoclean -y -qq
  - name: Integration Testing Matrix
    dependencies:
      - Update Dependencies
    task:
      prologue:
        commands:
          - sem-service start redis
          - cache restore
      env_vars:
        - name: DB_USER
          value: opensigl
        - name: DB_HOST
          value: 127.0.0.1
        - name: DB_PASS
          value: 6a50c5ed121ac12b35b96cbb59b5
        - name: DB_PORT
          value: '3306'
        - name: DB_NAME
          value: semaphoreci
        - name: PORT
          value: '8080'
        - name: SESS_SECRET
          value: 1a3184a126e42fa0d9466cf14841f8a218cd92e961f5677b30
        - name: DEBUG
          value: 'app,errors,app:uploader'
        - name: UPLOAD_DIR
          value: client/upload
        - name: BUILD_TIMEOUT
          value: '30'
        - name: CI
          value: '1'
      jobs:
        - name: Run Test Matrix
          commands:
            - sem-service start mysql $MYSQL_VERSION
            - mysql -h 127.0.0.1 -P 3306 -u root -e "CREATE USER $DB_USER@$DB_HOST IDENTIFIED BY '$DB_PASS';"
            - mysql -h 127.0.0.1 -P 3306 -u root -e "GRANT ALL PRIVILEGES ON *.* TO $DB_USER@$DB_HOST WITH GRANT OPTION;"
            - mysql -h 127.0.0.1 -P 3306 -u root -e "FLUSH PRIVILEGES;"
            - 'mysql -h 127.0.0.1 -P 3306 -u root -e "SET @@global.sql_mode=''STRICT_ALL_TABLES,NO_UNSIGNED_SUBTRACTION'';"'
            - nvm install $NODEJS_VERSION
            - checkout
            - 'echo "Testing node:$NODEJS_VERSION on mysql:$MYSQL_VERSION"'
            - npm ci
            - npx playwright install chromium
            - 'npm run build:db'
            - npm run build
            - mkdir results
            - 'npm run test:server-unit'
            - 'npm run test:client-unit'
            - 'npm run test:integration'
            - 'npm run test:integration:stock'
            - 'npm run test:e2e-account'
          matrix:
            - env_var: MYSQL_VERSION
              values:
                - '8.4'
            - env_var: NODEJS_VERSION
              values:
                - '22'
                - node
  - name: Install Testing Matrix
    dependencies:
      - Update Dependencies
    task:
      prologue:
        commands:
          - sem-service start redis
          - cache restore
      env_vars:
        - name: DB_USER
          value: opensigl
        - name: DB_HOST
          value: 127.0.0.1
        - name: DB_PASS
          value: 6a50c5ed121ac12b35b96cbb59b5
        - name: DB_PORT
          value: '3306'
        - name: DB_NAME
          value: semaphoreci
        - name: PORT
          value: '8080'
        - name: SESS_SECRET
          value: 1a3184a126e42fa0d9466cf14841f8a218cd92e961f5677b30
        - name: DEBUG
          value: 'app,errors'
        - name: UPLOAD_DIR
          value: client/upload
        - name: BUILD_TIMEOUT
          value: '30'
      jobs:
        - name: Run Test Matrix
          commands:
            - sem-service start mysql $MYSQL_VERSION
            - mysql -h 127.0.0.1 -P 3306 -u root -e "CREATE USER $DB_USER@$DB_HOST IDENTIFIED BY '$DB_PASS';"
            - mysql -h 127.0.0.1 -P 3306 -u root -e "GRANT ALL PRIVILEGES ON *.* TO $DB_USER@$DB_HOST WITH GRANT OPTION;"
            - mysql -h 127.0.0.1 -P 3306 -u root -e "FLUSH PRIVILEGES;"
            - 'mysql -h 127.0.0.1 -P 3306 -u root -e "SET @@global.sql_mode=''STRICT_ALL_TABLES,NO_UNSIGNED_SUBTRACTION'';"'
            - nvm install $NODEJS_VERSION
            - checkout
            - 'echo "[Installation] Testing node:$NODEJS_VERSION on mysql:$MYSQL_VERSION"'
            - npm ci
            - npm run build
            - bash ./sh/install-tests.sh
          matrix:
            - env_var: MYSQL_VERSION
              values:
                - '8.4'
            - env_var: NODEJS_VERSION
              values:
                - '22'
                - node
